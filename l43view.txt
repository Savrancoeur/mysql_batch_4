=> VIEW

= Syntax


= CREATE

CREATE VIEW viewtablename AS
... Statement



= READ

SELECT column1,column2 FROM viewtablename;



= UPDATE

CREATE OR REPLACE VIEW viewtablename AS
... Statement



= DELETE

DROP VIEW IF EXISTS viewtablename;

-----------------------------------------------

=EXERCISE

CREATE TABLE IF NOT EXISTS shoppers(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    phone VARCHAR(15) NOT NULL UNIQUE
);

DESC shoppers;
SHOW CREATE TABLE shoppers;
SHOW INDEX FROM shoppers;

INSERT INTO shoppers(name,phone)
VALUES ('aung aung','0911111'),
('maung maung','0922222'),
('kyaw kyaw','0933333'),
('tun tun','0944444'),
('zaw zaw','0955555'),
('su su','0966666'),
('nu nu','0977777'),
('yu yu','0988888'),
('aye aye','0999999'),
('hla hla','0912121'),
('ni lar','0913131'),
('yu par','0914141'),
('mu yar','0915151');

SELECT * FROM shoppers;



CREATE TABLE IF NOT EXISTS products(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    price DECIMAL(10,2) NOT NULL
);

DESC products;
SHOW CREATE TABLE products;
SHOW INDEX FROM products;


INSERT INTO products(name,price)
VALUES('redbull',1600),
('deedo',800),
('joey',900),
('sponsor',1300),
('water',1000);

SELECT * FROM products;




CREATE TABLE IF NOT EXISTS checkouts(
    date TIMESTAMP DEFAULT NOW(),
    product_id INT NOT NULL,
    qty INT NOT NULL,
    total DECIMAL(10,2) NOT NULL,
    payment ENUM('VISA','MPU','COD') NOT NULL,
    shopper_id INT NOT NULL,
    FOREIGN KEY(shopper_id) REFERENCES shoppers(id),
    FOREIGN KEY(product_id) REFERENCES products(id)
);

DESC checkouts;
SHOW CREATE TABLE checkouts;
SHOW INDEX FROM checkouts;

INSERT INTO checkouts(product_id,qty,total,payment,shopper_id)
VALUES (1,1,1600,1,1),
        (1,2,3200,1,2),
        (2,3,2400,3,2),
        (3,2,1800,2,3),
        (4,1,1300,1,4),
        (5,4,4000,2,4),
        (1,2,3200,3,5),
        (1,1,1600,2,3),
        (3,4,3600,2,2),
        (1,3,4800,1,5);


SELECT * FROM shoppers;
SELECT * FROM products;
SELECT * FROM checkouts;

-----------------------------------------------------------------------


=> AS statement (copy table)

CREATE TABLE IF NOT EXISTS newtablename
SELECT column1,column2,column3
FROM existingtablename;


CREATE TABLE IF NOT EXISTS newtablename AS
SELECT column1,column2,column3
FROM existingtablename;


=>copy table by AS
SELECT * FROM checkouts
WHERE payment = "COD";


CREATE TABLE IF NOT EXISTS checkoutbycod AS
SELECT * FROM checkouts
WHERE payment = "COD";


DESC checkoutbycod;
SHOW CREATE TABLE checkoutbycod;
SHOW INDEX FROM checkoutbycod;





=>copy table without AS
SELECT checkouts.product_id,checkouts.qty,checkouts.total,checkouts.payment
FROM checkouts
WHERE payment = "MPU";


CREATE TABLE IF NOT EXISTS checkoutbympu
SELECT checkouts.product_id,checkouts.qty,checkouts.total,checkouts.payment
FROM checkouts
WHERE payment = "MPU";


DESC checkoutbympu;
SHOW CREATE TABLE checkoutbympu;
SHOW INDEX FROM checkoutbympu;


-----------------------------------------------------------------------


=> View Table

SELECT checkouts.payment,SUM(checkouts.total) AS totalamount
FROM checkouts
GROUP BY payment
ORDER BY payment DESC;


CREATE VIEW vw_paymentreports AS
SELECT checkouts.payment,SUM(checkouts.total) AS totalamount
FROM checkouts
GROUP BY payment
ORDER BY payment DESC;


=>List All Tables

SHOW TABLES;
SHOW FULL TABLES;
SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'BASE TABLE';
SHOW FULL TABLES IN my_sql_batch4 WHERE TABLE_TYPE LIKE 'BASE TABLE';

SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';
SHOW FULL TABLES IN my_sql_batch4 WHERE TABLE_TYPE LIKE 'VIEW';


SELECT * FROM checkouts;
SELECT * FROM vw_paymentreports;



COD     5600.00
MPU     11000.00
VISA    10900.00

INSERT INTO checkouts(product_id,qty,total,payment,shopper_id)
VALUES (5,3,3000,1,3),
        (5,1,1000,2,2),
        (5,2,2000,3,2);


SELECT * FROM checkouts;
SELECT * FROM vw_paymentreports;
SELECT * FROM checkoutbycod;
SELECT * FROM checkoutbympu;


COD     7600.00
MPU     12000.00
VISA    13900.00


=> DROP VIEW
DROP VIEW IF EXISTS vw_paymentreports;

SELECT * FROM vw_paymentreports;
SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';


-----------------------------------------------------------------------
